import sys
sys.setrecursionlimit(10**9)

def dfs(x,y,d) :
    visited[x][y] = False 
    graph[x][y]=2


    for i in range(1,5) :
        dx = dxy[d-i][0]
        dy = dxy[d-i][1]
        nx = x+dx 
        ny = y+dy
        if 0<=nx<N and 0<=ny<M and visited[nx][ny] and graph[nx][ny]==0 :
            dfs(nx,ny,dxy.index([dx,dy]))
            return

    dx = dxy[d-2][0]
    dy = dxy[d-2][1]
    nx = x+dx 
    ny = y+dy
    
    if  0<=nx<N and 0<=ny<M and graph[nx][ny] !=1 :
        dfs(nx,ny,d)

    else :
        return

    return



N,M = map(int,input().split())

x,y,d = map(int,input().split())
graph = [list(map(int,input().split())) for _ in range(N)]
visited= [[True] * M for _  in range(N)]
dxy = [[-1,0], [0,1], [1,0], [0,-1]]


dfs(x,y,d)


sum =0

for i in graph :
    for j in i :
        if j == 2 :
            sum +=1 

print(sum)


